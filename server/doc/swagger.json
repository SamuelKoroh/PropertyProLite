{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Property-Pro-Lite API",
    "description": "This is the API Documentation for Property Pro Lite - Property Pro Lite is a platform where people can create and/or search properties for sale or rent.",
    "contact": {
      "email": "samuelkoroh@gmail.com"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3500",
  "basePath": "/api/v1",
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create new user",
        "description": "Create new user by sending profile data (e.g image optional, user details ). most fields are reuired",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "required": true
          },
          {
            "name": "first_name",
            "in": "formData",
            "required": true
          },
          {
            "name": "last_name",
            "in": "formData",
            "required": true
          },
          {
            "name": "phone_number",
            "in": "formData",
            "required": true
          },
          {
            "name": "address",
            "in": "formData",
            "required": true
          },
          {
            "name": "user_type",
            "in": "formData",
            "required": true
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#definitions/Authenticated"
            }
          },
          "400": {
            "$ref": "#responses/Standard400Error"
          },
          "500": {
            "$ref": "#responses/Standard500Error"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Login using valid credential to gain access to your profile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "valid login credentials",
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login successful",
            "schema": {
              "$ref": "#definitions/Authenticated"
            }
          },
          "400": {
            "$ref": "#responses/Standard400Error"
          },
          "500": {
            "$ref": "#responses/Standard500Error"
          }
        }
      }
    },
    "/property": {
      "post": {
        "tags": ["Properties"],
        "summary": "Creating new property",
        "description": "Provide valid property details to create a new property",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "$ref": "#parameters/x-auth-token"
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number",
            "required": true
          },
          {
            "name": "state",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "city",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "address",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "in": "formData",
            "type": "string",
            "description": "property type include (e.g 2 bedroom, 3 bedroom)",
            "required": true
          },
          {
            "name": "billing_type",
            "in": "formData",
            "type": "string",
            "description": "billing type include (e.g per year, one time payment)",
            "required": true
          },
          {
            "name": "deal_type",
            "in": "formData",
            "type": "string",
            "description": "deal type include (e.g for sale, for rent)",
            "required": true
          },
          {
            "name": "description",
            "in": "formData",
            "type": "string",
            "description": "details of the property",
            "required": true
          },
          {
            "name": "images",
            "in": "formData",
            "type": "file",
            "multiple": true,
            "description": "deal type include (e.g for sale, for rent)",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#definitions/Property"
            }
          },
          "400": {
            "$ref": "#responses/Standard400Error"
          },
          "401": {
            "$ref": "#responses/Standard401Error"
          },
          "403": {
            "$ref": "#responses/Standard403Error"
          },
          "500": {
            "$ref": "#responses/Standard500Error"
          }
        }
      },
      "get": {
        "tags": ["Properties"],
        "description": "Get all property adverts by sending request to this endpoint, so filter data by passing query string parameter (e.g price, location, type, deals)",
        "summary": "Get all property adverts",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "location",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "deal",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "price",
            "in": "query",
            "type": "number",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/GetProperties"
            }
          },
          "404": {
            "$ref": "#responses/Standard404Error"
          }
        }
      }
    },
    "/property/{propertyId}": {
      "get": {
        "tags": ["Properties"],
        "description": "Retrive single property advert by passing a url parameter",
        "summary": "Get a specific property advert.",
        "parameters": [
          {
            "$ref": "#parameters/propertyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/GetProperty"
            }
          },
          "404": {
            "$ref": "#responses/Standard404Error"
          }
        }
      },
      "patch": {
        "tags": ["Properties"],
        "summary": "Update property",
        "description": "This endpoint enables advert owners to update the details of a particular property advert",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "$ref": "#parameters/x-auth-token"
          },
          {
            "$ref": "#parameters/propertyId"
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number"
          },
          {
            "name": "state",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "type": "string",
            "description": "property type include (e.g 2 bedroom, 3 bedroom)"
          },
          {
            "name": "billing_type",
            "in": "formData",
            "type": "string",
            "description": "billing type include (e.g per year, one time payment)"
          },
          {
            "name": "deal_type",
            "in": "formData",
            "type": "string",
            "description": "deal type include (e.g for sale, for rent)"
          },
          {
            "name": "description",
            "in": "formData",
            "type": "string",
            "description": "details of the property"
          },
          {
            "name": "images",
            "in": "formData",
            "type": "file",
            "description": "deal type include (e.g for sale, for rent)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Property"
            }
          },
          "400": {
            "$ref": "#responses/Standard400Error"
          },
          "401": {
            "$ref": "#responses/Standard401Error"
          },
          "403": {
            "$ref": "#responses/Standard403Error"
          },
          "500": {
            "$ref": "#responses/Standard500Error"
          }
        }
      },
      "delete": {
        "tags": ["Properties"],
        "description": "This endpoint permanently remove a single property advert",
        "summary": "Remove a specific property advert.",
        "parameters": [
          {
            "$ref": "#parameters/x-auth-token"
          },
          {
            "$ref": "#parameters/propertyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "status": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#responses/Standard403Error"
          },
          "404": {
            "$ref": "#responses/Standard404Error"
          }
        }
      }
    },
    "/property/{propertyId}/sold": {
      "patch": {
        "tags": ["Properties"],
        "summary": "Mark a property as sold",
        "description": "This endpiont enables users to mark a single property as sold",
        "parameters": [
          {
            "$ref": "#parameters/x-auth-token"
          },
          {
            "$ref": "#parameters/propertyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Property"
            }
          },
          "400": {
            "$ref": "#responses/Standard400Error"
          },
          "401": {
            "$ref": "#responses/Standard401Error"
          },
          "403": {
            "$ref": "#responses/Standard403Error"
          },
          "500": {
            "$ref": "#responses/Standard500Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "email": {
          "type": "string",
          "example": "username@email.com"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "user_type": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean",
          "example": false
        },
        "created_on": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Authenticated": {
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "data": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
            },
            "id": {
              "type": "integer",
              "example": 1
            },
            "email": {
              "type": "string",
              "example": "username@email.com"
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "user_type": {
              "type": "string"
            },
            "is_admin": {
              "type": "boolean",
              "example": false
            },
            "created_on": {
              "type": "string",
              "format": "date"
            }
          }
        }
      }
    },
    "Login": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Property": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "owner": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "deal_type": {
          "type": "string"
        },
        "billing_type": {
          "type": "string"
        },
        "created_on": {
          "type": "string",
          "format": "date"
        },
        "image_url": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "GetProperty": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "created_on": {
              "type": "string",
              "format": "date"
            },
            "image_url": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "ownerEmail": {
              "type": "string"
            },
            "ownerPhoneNumber": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetProperties": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "created_on": {
                "type": "string",
                "format": "date"
              },
              "image_url": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "ownerEmail": {
                "type": "string"
              },
              "ownerPhoneNumber": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Error": {
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "error": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "Standard204Response": {
      "description": "No content found"
    },
    "Standard400Error": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#definitions/Error"
      }
    },
    "Standard401Error": {
      "description": "Access Denied - Invalid access token",
      "schema": {
        "$ref": "#definitions/Error"
      }
    },
    "Standard403Error": {
      "description": "Access Forbidden - No authorize access",
      "schema": {
        "$ref": "#definitions/Error"
      }
    },
    "Standard404Error": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#definitions/Error"
      }
    },
    "Standard500Error": {
      "description": "An unexpected error has occur",
      "schema": {
        "$ref": "#definitions/Error"
      }
    }
  },
  "parameters": {
    "x-auth-token": {
      "name": "x-auth-token",
      "in": "header",
      "type": "string",
      "required": true
    },
    "propertyId": {
      "name": "propertyId",
      "in": "path",
      "type": "integer",
      "required": true
    }
  }
}
