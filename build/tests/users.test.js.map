{"version":3,"sources":["../../server/tests/users.test.js"],"names":["describe","admin","testUser1","before","app","post","set","send","email","password","validUser","first_name","last_name","body","data","token","validProperty","title","it","result","get","status","to","equal","id","patch","address","filePath","__dirname","attach","delete"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport request from 'supertest';\nimport app from '../app';\nimport { validUser } from '../testdata/auth';\nimport { validProperty } from '../testdata/property';\n\ndescribe('/api/v1/user', () => {\n  let admin;\n  let testUser1;\n  before(async () => {\n    admin = await request(app)\n      .post('/api/v1/auth/signin')\n      .set('content-type', 'application/json')\n      .send({ email: 'admin@gmail.com', password: 'admin' });\n\n    testUser1 = await request(app)\n      .post('/api/v1/auth/signup')\n      .set('content-type', 'application/json')\n      .send({\n        ...validUser,\n        email: 'testuser1@test.com',\n        first_name: 'testuser1',\n        last_name: 'unittest'\n      });\n\n    await request(app)\n      .post('/api/v1/property')\n      .set('x-auth-token', testUser1.body.data.token)\n      .send({ ...validProperty, title: '1 bedroom flat' });\n\n    await request(app)\n      .post('/api/v1/property')\n      .set('x-auth-token', testUser1.body.data.token)\n      .send(validProperty);\n  });\n  describe('GET /', () => {\n    it('should return 200 if there are records', async () => {\n      const result = await request(app)\n        .get('/api/v1/users')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if there are records when filtered with user_type', async () => {\n      const result = await request(app)\n        .get('/api/v1/users?search=admin')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if there are records when filtered with first_name', async () => {\n      const result = await request(app)\n        .get(`/api/v1/users?search=${testUser1.body.data.first_name}`)\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n    it('should return 404 if there are no records return when performing filtering', async () => {\n      const result = await request(app)\n        .get('/api/v1/users?search=11111111111111111111111111111111111111111')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n  });\n  describe('GET /me', () => {\n    it('should return 200 if the current user profile is load', async () => {\n      const result = await request(app)\n        .get('/api/v1/users/me')\n        .set('x-auth-token', testUser1.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('GET  /:userId', () => {\n    it('should return 404 if the user is not found', async () => {\n      const result = await request(app)\n        .get('/api/v1/users/1000000000')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the user and he/her properties upload was retrieved', async () => {\n      const result = await request(app)\n        .get(`/api/v1/users/${testUser1.body.data.id}`)\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('PATCH  /:userId', () => {\n    it('should return 404 if the user is not found', async () => {\n      const result = await request(app)\n        .patch('/api/v1/users/10000')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the user profile was updated', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/users/${testUser1.body.data.id}`)\n        .set('x-auth-token', testUser1.body.data.token)\n        .send({ address: 'new address' });\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if the user image was updated', async () => {\n      const filePath = `${__dirname}/user.png`;\n      const result = await request(app)\n        .patch(`/api/v1/users/${testUser1.body.data.id}`)\n        .set('x-auth-token', testUser1.body.data.token)\n        .attach('image', filePath);\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if the user image is not valid', async () => {\n      const filePath = `${__dirname}/badimage.txt`;\n      const result = await request(app)\n        .patch(`/api/v1/users/${testUser1.body.data.id}`)\n        .set('x-auth-token', testUser1.body.data.token)\n        .attach('image', filePath);\n      expect(result.status).to.equal(500);\n    });\n  });\n  describe('PATCH  /:userId/activate', () => {\n    it('should return 404 if the user is not found', async () => {\n      const result = await request(app)\n        .patch('/api/v1/users/1000000/activate')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the user is_active field is set to true', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/users/${testUser1.body.data.id}/activate`)\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('DELETE  /:userId', () => {\n    it('should return 404 if the user is not found', async () => {\n      const result = await request(app)\n        .delete('/api/v1/users/100000')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the user is_active field is set to false', async () => {\n      const result = await request(app)\n        .delete(`/api/v1/users/${testUser1.body.data.id}`)\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n});\n"],"file":"users.test.js"}