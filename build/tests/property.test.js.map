{"version":3,"sources":["../../server/tests/property.test.js"],"names":["describe","filePath","__dirname","user","agent","agent2","before","app","post","send","validUser","email","user_type","it","result","set","body","data","token","validProperty","status","to","equal","field","attach","title","get","property","patch","id","price","res","admin","password","delete"],"mappings":"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","sourcesContent":["import request from 'supertest';\nimport { expect } from 'chai';\nimport app from '../app';\nimport { validUser } from '../testdata/auth';\nimport { validProperty } from '../testdata/property';\n\ndescribe('/api/v1/property', () => {\n  const filePath = `${__dirname}/house.png`;\n  let user = '';\n  let agent = '';\n  let agent2 = '';\n  before(async () => {\n    user = await request(app)\n      .post('/api/v1/auth/signup')\n      .send({ ...validUser, email: 'test@gmail.com' });\n\n    agent = await request(app)\n      .post('/api/v1/auth/signup')\n      .send({ ...validUser, email: 'agent@gmail.com', user_type: 'agent' });\n\n    agent2 = await request(app)\n      .post('/api/v1/auth/signup')\n      .send({ ...validUser, email: 'agent2@gmail.com', user_type: 'agent' });\n  });\n  describe('POST /', async () => {\n    it('should return 201 if the property details is valid without images', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send(validProperty);\n      expect(result.status).to.equal(201);\n    });\n    it('should return 201 if the property details is valid and has one or more image', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .field('title', '45 rooms duplex in agodi')\n        .field('price', 400000)\n        .field('state', 'Ibadan')\n        .field('city', 'Ojoo')\n        .field('address', '20 agodi oojoo')\n        .field('type', '45 rooms in a duples')\n        .field('billing_type', 'per year')\n        .field('description', 'Nice one')\n        .field('deal_type', 'for sale')\n        .attach('images', filePath);\n      expect(result.status).to.equal(201);\n    });\n    it('should return 401 if user has no token', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .send(validProperty);\n      expect(result.status).to.equal(401);\n    });\n    it('should return 400 if user has provide invalid token', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', 'invalidToken')\n        .send(validProperty);\n      expect(result.status).to.equal(400);\n    });\n\n    it('should return 403 if user is not an agent or admin', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', user.body.data.token)\n        .send(validProperty);\n      expect(result.status).to.equal(403);\n    });\n\n    it('should return 400 if the property details is not valid', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ ...validProperty, title: '' });\n      expect(result.status).to.equal(400);\n    });\n    it('should return 400 if the property already exist', async () => {\n      const result = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send(validProperty);\n      expect(result.status).to.equal(400);\n    });\n  });\n  describe('GET /', () => {\n    it('should return 200 if there is property but no query string provide', async () => {\n      const result = await request(app).get('/api/v1/property');\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if passed price query string', async () => {\n      const result = await request(app).get('/api/v1/property?price=500000');\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if passed location query string', async () => {\n      const result = await request(app).get('/api/v1/property?location=Warri');\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if passed deal query string', async () => {\n      const result = await request(app).get('/api/v1/property?deal=for rent');\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if passed type query string', async () => {\n      const result = await request(app).get('/api/v1/property?type=2 bedroom');\n      expect(result.status).to.equal(200);\n    });\n    it('should return 404 if no property is found', async () => {\n      const result = await request(app).get('/api/v1/property?location=2 bedroom');\n      expect(result.status).to.equal(404);\n    });\n  });\n  describe('GET /:propertyId', () => {\n    it('it should return 404 if property is not found', async () => {\n      const result = await request(app).get('/api/v1/property/50000');\n      expect(result.status).to.equal(404);\n    });\n    it('it should return 200 if property is  found', async () => {\n      const result = await request(app).get('/api/v1/property/1');\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('PATCH /:propertyId/sold', () => {\n    let property;\n    before(async () => {\n      property = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ ...validProperty, title: 'duplex in abuja' });\n    });\n    it('should return 404 if the property does not exist', async () => {\n      const result = await request(app)\n        .patch('/api/v1/property/100')\n        .set('x-auth-token', agent.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 403 if the property does not belong to the user', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}/sold`)\n        .set('x-auth-token', agent2.body.data.token);\n      expect(result.status).to.equal(403);\n    });\n    it('should return 200 if the property does exist and belong to the user and was marked as sold', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}/sold`)\n        .set('x-auth-token', agent.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('PATCH /:propertyId', () => {\n    let property;\n    before(async () => {\n      property = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ ...validProperty, title: '5 room duplex in abuja' });\n    });\n    it('should return 404 if the property does not exist', async () => {\n      const result = await request(app)\n        .patch('/api/v1/property/100')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ price: 200 });\n      expect(result.status).to.equal(404);\n    });\n    it('should return 403 if the property does not belong to the user', async () => {\n      const result = await request(app)\n        .patch('/api/v1/property/1')\n        .set('x-auth-token', agent2.body.data.token)\n        .send({ price: 200 });\n      expect(result.status).to.equal(403);\n    });\n    it('should return 200 if the property does exist and belong to the user and was updated', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}`)\n        .set('x-auth-token', agent.body.data.token)\n        .send({ price: 200 });\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if the property does exist and belong to the user and its image was updated', async () => {\n      const res = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}`)\n        .set('x-auth-token', agent.body.data.token)\n        .attach('images', filePath);\n      expect(res.status).to.equal(200);\n    });\n  });\n  describe('PATCH /:propertyId/activate', () => {\n    let property;\n    let admin;\n    before(async () => {\n      property = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ ...validProperty, title: '54 room duplex in abuja' });\n      admin = await request(app)\n        .post('/api/v1/auth/signin')\n        .set('Content-Type', 'application/json')\n        .send({ email: 'admin@gmail.com', password: 'admin' });\n    });\n    it('should return 403 if the user is not an admin', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}/activate`)\n        .set('x-auth-token', agent2.body.data.token);\n      expect(result.status).to.equal(403);\n    });\n\n    it('should return 404 if the property does not exist', async () => {\n      const result = await request(app)\n        .patch('/api/v1/property/100/activate')\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the property does exist and the operation was successful', async () => {\n      const result = await request(app)\n        .patch(`/api/v1/property/${property.body.data.id}/activate`)\n        .set('x-auth-token', admin.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n\n  describe('DELETE /:propertyId', () => {\n    let property;\n    before(async () => {\n      property = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', agent.body.data.token)\n        .send({ ...validProperty, title: '12 room duplex in abuja' });\n    });\n    it('should return 404 if the property does not exist', async () => {\n      const result = await request(app)\n        .delete('/api/v1/property/100')\n        .set('x-auth-token', agent.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 403 if the property does not belong to the user', async () => {\n      const result = await request(app)\n        .delete(`/api/v1/property/${property.body.data.id}`)\n        .set('x-auth-token', agent2.body.data.token);\n      expect(result.status).to.equal(403);\n    });\n    it('should return 200 if the property to be delete does exist and belong to the user', async () => {\n      const result = await request(app)\n        .delete(`/api/v1/property/${property.body.data.id}`)\n        .set('x-auth-token', agent.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n});\n"],"file":"property.test.js"}