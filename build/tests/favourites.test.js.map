{"version":3,"sources":["../../server/tests/favourites.test.js"],"names":["describe","admin","testUser2","property1","property2","before","app","post","set","send","email","password","validUser","first_name","last_name","body","data","token","validProperty","title","it","result","id","status","to","equal","get","delete"],"mappings":"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","sourcesContent":["import request from 'supertest';\nimport { expect } from 'chai';\nimport app from '../app';\nimport { validUser } from '../testdata/auth';\nimport { validProperty } from '../testdata/property';\n\ndescribe('/api/v1/favourites', () => {\n  let admin;\n  let testUser2;\n  let property1;\n  let property2;\n  before(async () => {\n    admin = await request(app)\n      .post('/api/v1/auth/signin')\n      .set('content-type', 'application/json')\n      .send({ email: 'admin@gmail.com', password: 'admin' });\n\n    testUser2 = await request(app)\n      .post('/api/v1/auth/signup')\n      .set('content-type', 'application/json')\n      .send({\n        ...validUser,\n        email: 'testuser2@test.com',\n        first_name: 'testuser2',\n        last_name: 'unittest'\n      });\n\n    property1 = await request(app)\n      .post('/api/v1/property')\n      .set('x-auth-token', admin.body.data.token)\n      .send({ ...validProperty, title: '12 bedroom flat' });\n  });\n\n  describe('POST /:propertyId', () => {\n    it('should return 200 if the property was added to his/her favourite list', async () => {\n      const result = await request(app)\n        .post(`/api/v1/favourites/${property1.body.data.id}`)\n        .set('x-auth-token', testUser2.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n    it('should return 200 if the property was removed from the favourite list', async () => {\n      const result = await request(app)\n        .post(`/api/v1/favourites/${property1.body.data.id}`)\n        .set('x-auth-token', testUser2.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n  describe('GET /', () => {\n    before(async () => {\n      property1 = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', admin.body.data.token)\n        .send({ ...validProperty, title: '1552 bedroom flat' });\n\n      property2 = await request(app)\n        .post('/api/v1/property')\n        .set('x-auth-token', admin.body.data.token)\n        .send({ ...validProperty, title: '12542 bedroom flat' });\n\n      await request(app)\n        .post(`/api/v1/favourites/${property1.body.data.id}`)\n        .set('x-auth-token', testUser2.body.data.token);\n\n      await request(app)\n        .post(`/api/v1/favourites/${property2.body.data.id}`)\n        .set('x-auth-token', testUser2.body.data.token);\n    });\n\n    it('should return 200 if the user favourite list is loaded successfully', async () => {\n      const result = await request(app)\n        .get('/api/v1/favourites')\n        .set('x-auth-token', testUser2.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n\n  describe('DELETE /:favouriteId', () => {\n    it('should return 404 if the property does not exist in the favourite list', async () => {\n      const result = await request(app)\n        .delete('/api/v1/favourites/10000000')\n        .set('x-auth-token', testUser2.body.data.token);\n      expect(result.status).to.equal(404);\n    });\n    it('should return 200 if the property was removed from the favourite list', async () => {\n      const result = await request(app)\n        .delete('/api/v1/favourites/1')\n        .set('x-auth-token', testUser2.body.data.token);\n      expect(result.status).to.equal(200);\n    });\n  });\n});\n"],"file":"favourites.test.js"}