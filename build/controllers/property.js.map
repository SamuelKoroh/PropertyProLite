{"version":3,"sources":["../../server/controllers/property.js"],"names":["getOwnerProperty","property","owner","first_name","concat","last_name","ownerEmail","email","ownerPhoneNumber","phone_number","revokeAccess","res","filterProperties","properties","type","deal","price","location","result","filter","p","title","toLowerCase","startsWith","deal_type","parseInt","state","city","address","createProperty","user","files","body","errors","Joi","validate","createPropertySchema","error","Properties","find","prop","id","length","status","is_active","created_on","image_url","images","push","getProperties","req","query","map","Users","u","getProperty","params","propertyId","data","updateProperty","is_admin","keys","Object","forEach","key","updatePropertyAsSold","activateDeactivateAdvaert","deleteProperty","index","indexOf","splice","message"],"mappings":"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","sourcesContent":["import Joi from 'joi';\nimport uploadImages from '../utils/upload-files';\nimport Properties from '../models/Properties';\nimport Users from '../models/Users';\nimport { createPropertySchema } from '../middleware/modelValidation';\nimport { okResponse, badRequest } from '../utils/refractory';\nimport curDate from '../utils/date';\n\n// ///////////////////////////////////////////////////////////////////\n/* This region is for code refractory\n@@ Description    To refractor owner property retrieve from the database\n*/\nconst getOwnerProperty = (property, owner) => {\n  return {\n    ...property,\n    owner: owner.first_name.concat(' ', owner.last_name),\n    ownerEmail: owner.email,\n    ownerPhoneNumber: owner.phone_number\n  };\n};\n/*\n@@ Description    Revoke user ffrom changing the state of a property if not it's owner\n*/\nconst revokeAccess = (res) => {\n  return badRequest(res, 'You are not allow to perform this operation', 403);\n};\n\nconst filterProperties = (properties, type, deal, price, location) => {\n  let result = properties;\n  if (type) result = result.filter(p => p.title.toLowerCase().startsWith(type.toLowerCase()));\n  if (deal) result = result.filter(p => p.deal_type.toLowerCase() === deal.toLowerCase());\n  if (price) result = result.filter(p => parseInt(p.price, 10) <= parseInt(price, 10));\n  if (location)\n    result = result.filter(\n      p =>\n        p.state.toLowerCase().startsWith(location.toLowerCase())\n        || p.city.toLowerCase().startsWith(location.toLowerCase())\n        || p.address.toLowerCase().startsWith(location.toLowerCase())\n    );\n  return result;\n};\n/*\n@@ end of refractory\n*/\n// ///////////////////////////////////////////////////////////////////////////\n\n/*\n@@ Route          /api/v1/property\n@@ Method         POST\n@@ Description    Create a property ad.\n*/\nexport const createProperty = async ({ user, files, body }, res) => {\n  try {\n    const errors = Joi.validate(body, createPropertySchema);\n    if (errors.error) return badRequest(res, errors, 400);\n\n    let property = Properties.find(prop => prop.title.toLowerCase() === body.title.toLowerCase());\n    if (property && property.owner === user.id)\n      return badRequest(res, 'This property already exists', 400);\n\n    property = {\n      id: Properties.length + 1,\n      ...body,\n      owner: user.id,\n      status: 'available',\n      is_active: true,\n      created_on: curDate()\n    };\n\n    if (files) {\n      const result = await uploadImages(files);\n      property.image_url = result.images;\n    }\n    Properties.push(property);\n    return okResponse(res, property, 201);\n  } catch (error) {\n    badRequest(res, 'Server Error', 500);\n  }\n};\n\n/*\n@@ Route          /api/v1//property/\n@@ Route          /api/v1//property/?type=val&price=val&location=val&deal=val\n@@ Method         GET\n@@ Description    Get all property adverts.\n*/\nexport const getProperties = (req, res) => {\n  const { location, type, deal, price } = req.query;\n  let properties = Properties.filter(p => p.status !== 'sold');\n\n  properties = filterProperties(properties, type, deal, price, location);\n  if (!properties.length) return badRequest(res, 'No property was found');\n\n  properties = properties.map((property) => {\n    const owner = Users.find(u => u.id === property.owner);\n    return getOwnerProperty(property, owner);\n  });\n  okResponse(res, properties);\n};\n\n/*\n@@ Route          /api/v1//property/:propertyId\n@@ Method         GET\n@@ Description    Get all property adverts.\n*/\nexport const getProperty = ({ params }, res) => {\n  const property = Properties.find(\n    prop => parseInt(prop.id, 10) === parseInt(params.propertyId, 10) && prop.status !== 'sold'\n  );\n  if (!property) return badRequest(res, 'The property does not exist');\n  const owner = Users.find(u => u.id === property.owner);\n  const data = getOwnerProperty(property, owner);\n  okResponse(res, data);\n};\n\n/*\n@@ Route          /api/v1//property/:propertyId\n@@ Method         PATCH\n@@ Description    Update a property advert.\n*/\nexport const updateProperty = async ({ params, body, files, user }, res) => {\n  const property = Properties.find(\n    prop => parseInt(prop.id, 10) === parseInt(params.propertyId, 10)\n  );\n  if (!property) return badRequest(res, 'The property does not exist');\n  if (property.owner !== user.id && user.is_admin === false) return revokeAccess(res);\n\n  const keys = Object.keys(body);\n  keys.forEach((key) => {\n    property[key] = body[key];\n  });\n\n  if (files) {\n    const result = await uploadImages(files);\n    property.image_url = result.images;\n  }\n  okResponse(res, property);\n};\n\n/*\n@@ Route          /api/v1//property/:propertyId/sold\n@@ Method         PATCH\n@@ Description    Update a property advert mark status as sold.\n*/\nexport const updatePropertyAsSold = ({ params, user }, res) => {\n  const property = Properties.find(\n    prop => parseInt(prop.id, 10) === parseInt(params.propertyId, 10)\n  );\n  if (!property) return badRequest(res, 'The property does not exist');\n  if (property.owner !== user.id && user.is_admin === false) return revokeAccess(res);\n  property.status = 'sold';\n  okResponse(res, property);\n};\n\n/*\n@@ Route          /api/v1/property/:propertyId/activate\n@@ Method         PATCH\n@@ Description    Activate user account\n*/\nexport const activateDeactivateAdvaert = ({ params }, res) => {\n  const property = Properties.find(p => parseInt(p.id, 10) === parseInt(params.propertyId, 10));\n  if (!property) return badRequest(res, 'The property advert does not exist');\n  property.is_active = !property.is_active;\n  okResponse(res, property);\n};\n/*\n@@ Route          /api/v1//property/:propertyId\n@@ Method         DELETE\n@@ Description    Delete a property advert.\n*/\nexport const deleteProperty = ({ params, user }, res) => {\n  const property = Properties.find(\n    prop => parseInt(prop.id, 10) === parseInt(params.propertyId, 10)\n  );\n\n  if (!property) return badRequest(res, 'The property does not exist');\n  if (property.owner !== user.id && user.is_admin === false) return revokeAccess(res);\n\n  const index = Properties.indexOf(property);\n  Properties.splice(index, 1);\n\n  okResponse(res, { message: 'The property has been removed' });\n};\n"],"file":"property.js"}