{"version":3,"sources":["../../server/controllers/flag.js"],"names":["noFlag","status","error","findFlag","flags","params","find","f","parseInt","id","flagId","getFlagedUserProperty","flag","property","Properties","p","property_id","first_name","fName","last_name","lName","agentId","Users","u","owner","title","agent_id","agent_name","concat","filterByQuery","allFlags","search","result","filter","name","toLocaleLowerCase","startsWith","reason","email","flagAdd","body","res","errors","Joi","validate","flagAddSchema","addFlag","Flags","length","created_on","push","getAllFlags","query","map","getFlagById","flagedUserProperty","deleteFlag","index","indexOf","splice","message"],"mappings":"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","sourcesContent":["import Joi from 'joi';\nimport Flags from '../models/Flags';\nimport { flagAddSchema } from '../middleware/modelValidation';\nimport Properties from '../models/Properties';\nimport Users from '../models/Users';\nimport { okResponse, badRequest } from '../utils/refractory';\nimport curDate from '../utils/date';\n\n// ///////////////////////////////////////////////////////////////////\n/* This region is for code refractory\n@@ Description    function to retrieve flags property and owner detail\n*/\nconst noFlag = { status: 'error', error: 'No flag' };\n\n// Fuction for finding return a single flag\nconst findFlag = (flags, params) => {\n  return flags.find(\n    f => f.status === 'active' && parseInt(f.id, 10) === parseInt(params.flagId, 10)\n  );\n};\n\n// Description    function to retrieve flags property and owner detail\nconst getFlagedUserProperty = (flag) => {\n  const property = Properties.find(p => parseInt(p.id, 10) === parseInt(flag.property_id, 10));\n  const { first_name: fName, last_name: lName, id: agentId } = Users.find(\n    u => parseInt(u.id, 10) === parseInt(property.owner, 10)\n  );\n  return {\n    ...flag,\n    property: property.title,\n    agent_id: agentId,\n    agent_name: fName.concat(' ', lName)\n  };\n};\n\n// Description    function to filtered the list of flags\nconst filterByQuery = (allFlags, search) => {\n  let result = allFlags;\n  if (search)\n    result = result.filter(\n      f =>\n        f.name.toLocaleLowerCase().startsWith(search.toLocaleLowerCase())\n        || f.reason.toLocaleLowerCase().startsWith(search.toLocaleLowerCase())\n        || f.email.toLocaleLowerCase().startsWith(search.toLocaleLowerCase())\n    );\n  return result;\n};\n/*\n@@ end of refractory\n*/\n// ///////////////////////////////////////////////////////////////////////////\n/*\n@@ Route          /api/v1/flag\n@@ Method         POST\n@@ Description    Report - flag a property advert.\n*/\nexport const flagAdd = ({ body }, res) => {\n  const errors = Joi.validate(body, flagAddSchema);\n  if (errors.error) return badRequest(res, errors, 400);\n\n  const addFlag = { id: Flags.length + 1, status: 'active', ...body, created_on: curDate() };\n  Flags.push(addFlag);\n  okResponse(res, addFlag);\n};\n\n/*\n@@ Route          /api/v1/flag\n@@ Method         GET\n@@ Description    Get all flaged property.\n*/\nexport const getAllFlags = ({ query }, res) => {\n  const { search } = query;\n  let allFlags = Flags.filter(f => f.status === 'active');\n\n  allFlags = filterByQuery(allFlags, search);\n  if (!allFlags.length) return badRequest(res, 'No flags');\n\n  allFlags = allFlags.map((flag) => {\n    return getFlagedUserProperty(flag);\n  });\n  return okResponse(res, allFlags);\n};\n\n/*\n@@ Route          /api/v1/flag/:flagId\n@@ Method         GET\n@@ Description    Get a flaged property details.\n*/\nexport const getFlagById = ({ params }, res) => {\n  const flag = findFlag(Flags, params);\n  if (!flag) return badRequest(res, noFlag);\n  const flagedUserProperty = getFlagedUserProperty(flag);\n  okResponse(res, flagedUserProperty);\n};\n\n/*\n@@ Route          /api/v1/flag/:flagId\n@@ Method         DELETE\n@@ Description    Remove a flag report\n*/\nexport const deleteFlag = ({ params }, res) => {\n  const flag = findFlag(Flags, params);\n  if (!flag) return badRequest(res, noFlag);\n  const index = Flags.indexOf(flag);\n  Flags.splice(index, 1);\n  okResponse(res, { message: 'The flag has been removed' });\n};\n"],"file":"flag.js"}