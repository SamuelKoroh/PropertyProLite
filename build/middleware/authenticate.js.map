{"version":3,"sources":["../../server/middleware/authenticate.js"],"names":["jwtSecret","process","env","JWT_SECRET","authenticate","req","res","next","token","header","status","json","error","user","jwt","verify","isAgent","user_type","toString","is_admin","isAdmin"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA9B;;AAEA,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC,MAAI;AACF,UAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd;AAEA,QAAI,CAACD,KAAL,EACE,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBE,MAAAA,KAAK,EAAE;AAA1B,KAArB,CAAP;AAEFP,IAAAA,GAAG,CAACQ,IAAJ,GAAWC,sBAAIC,MAAJ,CAAWP,KAAX,EAAkBR,SAAlB,CAAX;AACAO,IAAAA,IAAI;AACL,GARD,CAQE,OAAOK,KAAP,EAAc;AACd,WAAON,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBE,MAAAA,KAAK,EAAE;AAA1B,KAArB,CAAP;AACD;AACF,CAZD;;AAcA,MAAMI,OAAO,GAAG,CAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,MAAIF,GAAG,CAACQ,IAAJ,CAASI,SAAT,CAAmBC,QAAnB,OAAkC,OAAlC,IAA6Cb,GAAG,CAACQ,IAAJ,CAASM,QAAT,KAAsB,KAAvE,EACE,OAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,IAAAA,MAAM,EAAE,OAAV;AAAmBE,IAAAA,KAAK,EAAE;AAA1B,GAArB,CAAP;AAEFL,EAAAA,IAAI;AACL,CALD;;;;AAOA,MAAMa,OAAO,GAAG,CAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,MAAIF,GAAG,CAACQ,IAAJ,CAASM,QAAT,KAAsB,KAA1B,EACE,OAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,IAAAA,MAAM,EAAE,OAAV;AAAmBE,IAAAA,KAAK,EAAE;AAA1B,GAArB,CAAP;AAEFL,EAAAA,IAAI;AACL,CALD;;;eAQeH,Y","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst jwtSecret = process.env.JWT_SECRET;\n\nconst authenticate = (req, res, next) => {\n  try {\n    const token = req.header('x-auth-token');\n\n    if (!token)\n      return res.status(401).json({ status: 'error', error: 'Access Denied - No token provided' });\n\n    req.user = jwt.verify(token, jwtSecret);\n    next();\n  } catch (error) {\n    return res.status(400).json({ status: 'error', error: 'Invalid token' });\n  }\n};\n\nconst isAgent = (req, res, next) => {\n  if (req.user.user_type.toString() !== 'agent' && req.user.is_admin === false)\n    return res.status(403).json({ status: 'error', error: 'Access Forbidden' });\n\n  next();\n};\n\nconst isAdmin = (req, res, next) => {\n  if (req.user.is_admin === false)\n    return res.status(403).json({ status: 'error', error: 'Access Forbidden' });\n\n  next();\n};\n\nexport { isAgent, isAdmin };\nexport default authenticate;\n"],"file":"authenticate.js"}